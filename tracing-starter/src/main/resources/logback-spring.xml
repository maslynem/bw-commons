<configuration>
    <springProperty scope="context" name="appName" source="spring.application.name"/>

    <!-- Пути и ротация логов: берём из env или дефолт -->
    <springProperty name="LOG_PATH" source="logging.file.path" defaultValue="/var/app-logs"/>
    <springProperty name="LOG_FILE_PATTERN" source="logging.file.pattern" defaultValue="/var/app-logs/app.%d{yyyy-MM-dd}.%i.log.gz"/>
    <springProperty name="MAX_FILE_SIZE" source="logging.rotation.max-file-size" defaultValue="50MB"/>
    <springProperty name="MAX_HISTORY" source="logging.rotation.max-history" defaultValue="14"/>
    <springProperty name="TOTAL_SIZE_CAP" source="logging.rotation.total-size-cap" defaultValue="5GB"/>

    <!-- Паттерн-консоль для удобного чтения -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %-5level %msg traceId=%X{traceId:-} spanId=%X{spanId:-} %ex%n
            </pattern>
        </encoder>
    </appender>

    <!-- JSON file appender: rolling + logstash encoder -->
    <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/app.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE_PATTERN}</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>{"app":"${appName}"}</pattern>
                </pattern>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                </timestamp>
                <message>
                    <fieldName>message</fieldName>
                </message>
                <logLevel><fieldName>level</fieldName></logLevel>
                <!-- MDC: traceId/spanId (которые мы кладём в MDC из TracingAutoConfiguration) -->
                <mdc>
                    <fieldNames>
                        <traceId>traceId</traceId>
                        <spanId>spanId</spanId>
                    </fieldNames>
                </mdc>
                <stackTrace>
                    <fieldName>exception</fieldName>
                </stackTrace>
            </providers>
        </encoder>
    </appender>

    <!-- Асинхронный аппендер вокруг JSON_FILE, чтобы не блокировать поток приложения -->
    <appender name="ASYNC_JSON" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="JSON_FILE"/>
        <queueSize>8192</queueSize>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <!-- root logger: всегда в консоль; также пишем в файл через ASYNC_JSON -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_JSON"/>
    </root>
</configuration>
